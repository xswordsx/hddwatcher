name: Go Release

on:
  push:
    tags:
      - 'v[0-9]+.*'
      - test-*

jobs:
  build_assets:
    strategy:
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']
        goarch: ['386', 'amd64', 'arm', 'arm64']
        exclude:
         - os: macos-latest
           goarch: '386'
         - os: macos-latest
           goarch: arm
         - os: windows-latest
           goarch: arm64
    name: Build assets
    runs-on: ${{ matrix.os }} # we run many different builds
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set output path
        run: echo OUTPUT_PATH="hddwatcher_$(go env GOOS)_$(go env GOARCH)_${GITHUB_REF:10}" >> $GITHUB_ENV
        
      - if:  matrix.os == 'windows-latest'
        run: echo OUTPUT_PATH="hddwatcher_$(go env GOOS)_$(go env GOARCH)_${GITHUB_REF:10}.exe" >> $GITHUB_ENV

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16'

      - name: Build binary
        id: build_assets
        env:
          GOARCH: ${{ matrix.goarch }}
        run: >
          go build -v
          -o "./${OUTPUT_PATH}"
          -ldflags='
          -X "main.version=${GITHUB_REF}"
          -X "main.commit=${GITHUB_SHA}"
          -X "main.builtAt=$(date)"
          '
          .

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          files: |
            ${{ env.OUTPUT_PATH }}
            ${{ env.OUTPUT_PATH }}.exe
